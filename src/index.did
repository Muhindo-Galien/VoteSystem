service: () -> {
    createCandidate: (text) -> (record {id:principal; citizenIds:vec principal; name:text; createdAt:nat64});
    createCitizen: (text, principal) -> (variant {Ok:record {id:principal; name:text; createdAt:nat64; candidateId:principal}; Err:variant {CitizenDoesNotExist:principal; CandidateDoesNotExist:principal}});
    deleteCandidate: (principal) -> (variant {Ok:record {id:principal; citizenIds:vec principal; name:text; createdAt:nat64}; Err:variant {CitizenDoesNotExist:principal; CandidateDoesNotExist:principal}});
    deleteCitizen: (principal) -> (variant {Ok:record {id:principal; name:text; createdAt:nat64; candidateId:principal}; Err:variant {CitizenDoesNotExist:principal; CandidateDoesNotExist:principal}});
    readCandidateById: (principal) -> (opt record {id:principal; citizenIds:vec principal; name:text; createdAt:nat64}) query;
    readCandidates: () -> (vec record {id:principal; name:text; count:int}) query;
    readCitizenById: (principal) -> (opt record {id:principal; name:text; createdAt:nat64; candidateId:principal}) query;
    readCitizens: () -> (vec record {id:principal; name:text; createdAt:nat64; candidateId:principal}) query;
    readPollingById: (principal) -> (text) query;
}
